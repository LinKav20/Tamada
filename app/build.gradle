plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'com.google.gms.google-services'
}

apply plugin: 'kotlinx-serialization'

android {
    namespace 'com.github.linkav20.tamada'
    compileSdk 34

    packagingOptions {
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/LICENSE")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/notice.txt")
        exclude("META-INF/ASL2.0")
        exclude("META-INF/*.kotlin_module")
    }

    defaultConfig {
        applicationId "com.github.linkav20.tamada"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation libs.core.ktx
    implementation libs.lifecycle.ktx
    implementation libs.activity.compose
    implementation libs.splashScreen
    implementation libs.appcompat

    // Compose
    implementation libs.compose.ui
    implementation(libs.compose.material) {
        exclude group: "androidx.compose.animation", module: "animation"
        exclude group: "androidx.compose.animation", module: "animation-core"
    }
    implementation libs.compose.ui.tooling.preview
    implementation libs.navigation.compose
    implementation libs.compose.runtime
    implementation libs.hilt.navigation
    implementation platform(libs.compose.bom)
    implementation libs.ui.graphics
    implementation libs.compose.material3
    androidTestImplementation platform(libs.compose.bom)
    debugImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.ui.test.manifest
    androidTestImplementation libs.compose.ui.test

    // Accompanist
    implementation libs.navigation.material
    implementation(libs.navigation.animation) {
        exclude group: "androidx.compose.animation", module: "animation"
        exclude group: "androidx.compose.animation", module: "animation-core"
    }

    // Hilt
    implementation libs.hilt.android
    implementation libs.dagger
    kapt libs.hilt.compiler
    kapt libs.hilt.android.compiler
    kapt libs.dagger.compiler

    // Serialization
    implementation libs.serialization.json

    implementation libs.timber


    // Tests
    testImplementation libs.junit
    androidTestImplementation libs.junit.ext
    androidTestImplementation libs.espresso
    coreLibraryDesugaring libs.desugar
    androidTestImplementation libs.hilt.android.testing
    androidTestImplementation libs.hilt.android
    kaptAndroidTest libs.hilt.android.compiler
    androidTestImplementation libs.test.runner
    androidTestUtil libs.orchestrator
    androidTestImplementation(libs.wiremock) {
        exclude group: "com.github.jknack", module: "handlebars"
    }
    androidTestImplementation libs.allure.kotlin.model
    androidTestImplementation libs.allure.kotlin.commons
    androidTestImplementation libs.allure.kotlin.junit4
    androidTestImplementation libs.allure.kotlin.android
    implementation libs.uiautomator
    androidTestImplementation libs.rules

    // Tools
    debugImplementation libs.leakcanary

    // Network
    androidTestImplementation libs.moshi
    androidTestImplementation libs.converter.moshi
    androidTestImplementation libs.retrofit

    // FCM
    implementation platform(libs.firebase.platform)
    implementation libs.firebase.messaging

    implementation project(path: ':core')
    implementation project(path: ':coreui')
    implementation project(path: ':features:auth')
    implementation project(path: ':features:home')
    implementation project(path: ':features:info')
    implementation project(path: ':features:guests')
    implementation project(path: ':features:lists')
    implementation project(path: ':features:finance')
    implementation project(path: ':features:invitation')
}